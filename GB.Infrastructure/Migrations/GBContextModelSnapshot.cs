// <auto-generated />
using GB.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GB.Infrastructure.Migrations
{
    [DbContext(typeof(GBContext))]
    partial class GBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GB.Domain.Entities.Biere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrasserieId")
                        .HasColumnType("int");

                    b.Property<decimal>("DegresAlcool")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrasserieId");

                    b.ToTable("Bieres");
                });

            modelBuilder.Entity("GB.Domain.Entities.Brasserie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Brasseries");
                });

            modelBuilder.Entity("GB.Domain.Entities.Grossiste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Grossistes");
                });

            modelBuilder.Entity("GB.Domain.Entities.GrossisteBiere", b =>
                {
                    b.Property<int>("GrossisteId")
                        .HasColumnType("int");

                    b.Property<int>("BiereId")
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("GrossisteId", "BiereId");

                    b.HasIndex("BiereId");

                    b.ToTable("GrossisteBieres");
                });

            modelBuilder.Entity("GB.Domain.Entities.Biere", b =>
                {
                    b.HasOne("GB.Domain.Entities.Brasserie", "Brasserie")
                        .WithMany("Bieres")
                        .HasForeignKey("BrasserieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brasserie");
                });

            modelBuilder.Entity("GB.Domain.Entities.GrossisteBiere", b =>
                {
                    b.HasOne("GB.Domain.Entities.Biere", "Biere")
                        .WithMany("GrossisteBieres")
                        .HasForeignKey("BiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GB.Domain.Entities.Grossiste", "Grossiste")
                        .WithMany("GrossisteBieres")
                        .HasForeignKey("GrossisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biere");

                    b.Navigation("Grossiste");
                });

            modelBuilder.Entity("GB.Domain.Entities.Biere", b =>
                {
                    b.Navigation("GrossisteBieres");
                });

            modelBuilder.Entity("GB.Domain.Entities.Brasserie", b =>
                {
                    b.Navigation("Bieres");
                });

            modelBuilder.Entity("GB.Domain.Entities.Grossiste", b =>
                {
                    b.Navigation("GrossisteBieres");
                });
#pragma warning restore 612, 618
        }
    }
}
